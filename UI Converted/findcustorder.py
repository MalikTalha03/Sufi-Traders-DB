# Form implementation generated from reading ui file 'findcustorder.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import pyodbc
from topbar import MenuBar
from db import DatabaseManager

class Ui_MainWindow(object):
    def __init__(self):
        self.db = DatabaseManager()
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lineEdit_8 = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.lineEdit_8.setEnabled(False)
        self.lineEdit_8.setGeometry(QtCore.QRect(390, 40, 113, 24))
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.lineEdit_4 = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.lineEdit_4.setEnabled(False)
        self.lineEdit_4.setGeometry(QtCore.QRect(120, 70, 113, 24))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.label_4 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(290, 10, 91, 20))
        self.label_4.setObjectName("label_4")
        self.label_9 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(290, 40, 81, 20))
        self.label_9.setObjectName("label_9")
        self.label_3 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(10, 10, 71, 16))
        self.label_3.setObjectName("label_3")
        self.lineEdit_3 = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.lineEdit_3.setEnabled(False)
        self.lineEdit_3.setGeometry(QtCore.QRect(120, 40, 113, 24))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.label_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 40, 71, 16))
        self.label_2.setObjectName("label_2")
        self.lineEdit = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.lineEdit.setEnabled(True)
        self.lineEdit.setGeometry(QtCore.QRect(120, 10, 113, 24))
        self.lineEdit.setObjectName("lineEdit")
        self.label_5 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(10, 70, 81, 16))
        self.label_5.setObjectName("label_5")
        self.lineEdit_2 = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.lineEdit_2.setEnabled(False)
        self.lineEdit_2.setGeometry(QtCore.QRect(390, 10, 191, 24))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.tableWidget = QtWidgets.QTableWidget(parent=self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(10, 100, 761, 431))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableWidget.sizePolicy().hasHeightForWidth())
        self.tableWidget.setSizePolicy(sizePolicy)
        self.tableWidget.setMinimumSize(QtCore.QSize(761, 431))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        self.lineEdit_9 = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.lineEdit_9.setEnabled(False)
        self.lineEdit_9.setGeometry(QtCore.QRect(390, 70, 113, 24))
        self.lineEdit_9.setText("")
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.label_10 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(280, 70, 101, 20))
        self.label_10.setObjectName("label_10")
        self.pushButton = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(639, 530, 111, 24))
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        menubar = MenuBar(MainWindow)
        MainWindow.setMenuBar(menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        
        self.lineEdit.returnPressed.connect(self.findorder)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Customer Order"))
        self.label_4.setText(_translate("MainWindow", "Customer Name"))
        self.label_9.setText(_translate("MainWindow", "Customer ID"))
        self.label_3.setText(_translate("MainWindow", "Order No"))
        self.label_2.setText(_translate("MainWindow", "Amount Paid"))
        self.label_5.setText(_translate("MainWindow", "Total Amount"))
        self.tableWidget.setSortingEnabled(False)
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Product ID"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Product Name"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Per unit Price"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Quantity"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Total"))
        self.label_10.setText(_translate("MainWindow", "Remaining Amount"))
        self.pushButton.setText(_translate("MainWindow", "Receive Payment"))

    def findorder(self):
        self.clearfields()
        cnxn = None
        id = self.lineEdit.text()
        total = 0
        totalpaid = 0
        rows = self.db.execute_read_query("SELECT * FROM Customer_Order WHERE orderID = '{}'".format(id))
        if rows:
            for row in rows:
                cid = row[1]
                self.lineEdit_8.setText(str(cid))
                cust = self.db.execute_read_query("SELECT * FROM Customers WHERE customerID = '{}'".format(cid))
                if cust:
                    for c in cust:
                        cname = str(c[1] + " " + c[2])
                        self.lineEdit_2.setText(cname)
                prods = self.db.execute_read_query("SELECT * FROM Customer_Order_Details WHERE orderID = '{}'".format(id))
                if prods:
                    for prod in prods:
                        prodtot = 0
                        pid=prod[1]
                        quantity= prod[2]
                        prod = self.db.execute_read_query("SELECT * FROM Products WHERE productID = '{}'".format(pid))
                        if prod:
                            for p in prod:
                                prodprice=p[2]
                                prodtot = int(quantity) * int(prodprice)
                                total = total + prodtot

                                row_position = self.tableWidget.rowCount()
                                self.tableWidget.insertRow(row_position)
                                self.tableWidget.setItem(row_position, 0, QtWidgets.QTableWidgetItem(str(pid)))
                                self.tableWidget.setItem(row_position, 1, QtWidgets.QTableWidgetItem(str(p[1])))
                                self.tableWidget.setItem(row_position, 2, QtWidgets.QTableWidgetItem(str(prodprice)))
                                self.tableWidget.setItem(row_position, 3, QtWidgets.QTableWidgetItem(str(quantity)))
                                self.tableWidget.setItem(row_position, 4, QtWidgets.QTableWidgetItem(str(prodtot)))
                                for col in range(self.tableWidget.columnCount()):
                                    item = self.tableWidget.item(row_position, col)
                                    if item:
                                        item.setFlags(item.flags() & ~QtCore.Qt.ItemFlag.ItemIsEditable)
                    self.lineEdit_4.setText(str(total))
                    rows = self.db.execute_read_query("SELECT * FROM Customer_Transactions WHERE orderID = '{}' AND transactionType IN ('Cash', 'Bank Transfer')".format(id))
                    if rows:
                        for row in rows:
                            totalpaid = totalpaid + row[2]
                            self.lineEdit_3.setText(str(totalpaid))
                    rem = total -totalpaid
                    if rem == 0 :
                        self.lineEdit_9.setText(str(rem))
                    else:
                        self.lineEdit_9.setText(str(rem))
        else:
            msg_box = QtWidgets.QMessageBox()
            msg_box.setWindowTitle("Order Error")
            msg_box.setText("No Order Found against ID : {}".format(id))
            msg_box.setIcon(QtWidgets.QMessageBox.Icon.Critical)
            msg_box.setStandardButtons(QtWidgets.QMessageBox.StandardButton.Ok)
            result = msg_box.exec()

    def clearfields(self):
        self.lineEdit_2.clear()
        self.lineEdit_8.clear()
        self.lineEdit_9.clear()
        self.lineEdit_3.clear()
        self.lineEdit_4.clear()
        self.tableWidget.setRowCount(0)

    def setvalues(self,orderno):
        self.lineEdit.setText(str(orderno))
        self.findorder()
        self.lineEdit.setEnabled(False)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
